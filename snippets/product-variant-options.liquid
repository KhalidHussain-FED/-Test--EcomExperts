{% comment %}
  Renders product variant options with image swatches for colors and a single dropdown for sizes

  Accepts:
  - product: {Object} product object.
  - option: {Object} current product_option object.
  - block: {Object} block object.

  Usage:
  {% render 'product-variant-options',
    product: product,
    option: option,
    block: block
  %}
{% endcomment %}

{%- liquid
  assign variants_available_arr = product.variants | map: 'available'
  assign variants_option1_arr = product.variants | map: 'option1'
  assign variants_option2_arr = product.variants | map: 'option2'
  assign variants_option3_arr = product.variants | map: 'option3'

  assign product_form_id = 'product-form-' | append: section.id
-%}

{%- assign option = product.options.first -%}

{%- liquid
  assign option_disabled = true

  for option1_name in variants_option1_arr
    case option.position
      when 1
        if variants_option1_arr[forloop.index0] == option.values.first and variants_available_arr[forloop.index0]
          assign option_disabled = false
        endif
      when 2
        if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == option.values.first and variants_available_arr[forloop.index0]
          assign option_disabled = false
        endif
      when 3
        if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == product.selected_or_first_available_variant.option2 and variants_option3_arr[forloop.index0] == option.values.first and variants_available_arr[forloop.index0]
          assign option_disabled = false
        endif
    endcase
  endfor
-%}

{%- if option.name == 'Color' -%}
  <div
    class="variant-swatch {% if option.selected_value == option.values.first %}selected{% endif %}"
    data-variant-id="{{ variant.id }}"
  >
    {% assign image_url = '' %}
    {%- case option.values.first -%}
      {%- when 'Black' -%}
        {% assign image_url = 'https://khalid-hussain-test.myshopify.com/cdn/shop/products/download.jpg' %}
      {%- when 'Red' -%}
        {% assign image_url = 'https://khalid-hussain-test.myshopify.com/cdn/shop/products/red-bag.png' %}
      {%- when 'Tan' -%}
        {% assign image_url = 'https://khalid-hussain-test.myshopify.com/cdn/shop/products/tan-bag.webp' %}
      {%- else -%}
        {% assign image_url = 'default_image_url.jpg' %}
    {%- endcase -%}
    <img src="{{ image_url | product_img_url: '50x50' }}" alt="{{ option.values.first }}">
  </div>
{%- elsif option.name == 'Size' -%}
  <select
    id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
    name="{{ option.name }}"
    form="{{ product_form_id }}"
    {% if option_disabled %}
      disabled="disabled"
    {% endif %}
  >
    <option
      value="Unselected"
      {% if option.selected_value == 'Unselected' %}
        selected
      {% endif %}
    >
      Unselected
    </option>
    <option
      value="Small"
      {% if option.selected_value == 'Small' %}
        selected
      {% endif %}
    >
      Small
    </option>
    <option
      value="Medium"
      {% if option.selected_value == 'Medium' %}
        selected
      {% endif %}
    >
      Medium
    </option>
    <option
      value="Large"
      {% if option.selected_value == 'Large' %}
        selected
      {% endif %}
    >
      Large
    </option>
  </select>
{%- endif -%}

{%- if block.settings.picker_type == 'button' -%}
  <!-- Your button code goes here -->
{%- elsif block.settings.picker_type == 'dropdown' -%}
  <!-- Existing dropdown code remains unchanged -->
{%- endif -%}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var swatches = document.querySelectorAll('.variant-swatch');
    var productImage = document.getElementById('product-image');

    if (!product || !product.variants) {
      console.error('Product or variants not available.');
      return;
    }

    swatches.forEach(function(swatch) {
      swatch.addEventListener('click', function() {
        var variantId = this.getAttribute('data-variant-id');
        var variant = findVariantById(variantId);

        if (variant && variant.featured_image) {
          var imageUrl = variant.featured_image.src;
          updateProductImage(imageUrl);
        }
      });
    });

    function findVariantById(variantId) {
      return product.variants.find(function(variant) {
        return variant.id === variantId;
      });
    }

    function updateProductImage(imageUrl) {
      productImage.src = imageUrl;
    }
  });
</script>
<style>
  /* Image Swatches */
  .variant-swatch {
    display: inline-block;
    margin-right: 10px;
    cursor: pointer;
  }

  .variant-swatch img {
    width: 50px;
    height: 50px;
    border: 1px solid #ccc;
  }

  .variant-swatch.selected {
    border-color: #000;
  }

  /* Size Dropdown */
  #size-dropdown {
    margin-top: 10px;
    padding: 8px;
    font-size: 14px;
  }

  #size-dropdown label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
  }
</style>
